 alright welcome back and glad to see you again even though I cannot actually see you which is a shame I wish I could anyway let's move on before this gets weird so I personally love this format a video because I feel like it can be very helpful I mean we all have these things that we wish we could go back in time and change and do differently and since we cannot change our own past these videos might be a way to kind of help change someone else's future or at least help them avoid the same mistakes that we make so here are six things I wish I knew when I started programming it's not too late to learn to code this is something that I feel like is the most common misconception when it comes to programming and I have this misconception as well and that is that you need to start it when you like five years old in order to become a programmer or you need to be like a gamer or super into computers none of the above are true and none of the above fit the description of me I play video games maybe once every five months and in my group of friends I would have been described as like the grandpa when it comes to understanding how to do things with the computer. so I really wish I would have known that it really isn't that difficult it's not magic and you can learn it learn the basics this one would have saved me so much time if I would have known it the thing is that I got started trying to build an app from like zero knowledge of how any of this worked I had no clue what programming was and at that point I would have thought that programming was like writing ones and zeros so I literally had no clue so getting started in that way meant that I was able to build some things but it was with like immense amount of effort and I wish that someone would have just told me that if you just learn some basics of object-oriented programming then you're probably going to be able to cut your time spent on this in half I mean I feel like I wouldn't have listened but if I would have listened it would have been a tremendous help and we're only talking about spending one or two hours per day for maybe two weeks trying to learn like the very basics and if you do that then you'll become an infinitely more capable programmer and for most of the stuff that I build on this channel I still rely pretty much entirely on this very basic programming knowledge and I'll add a link in the description of this video to a good article that I found on the basics of programming and I'll also add a link to my favorite book for learning the fundamentals of programming it doesn't matter what language you choose just pick one all right so this one is a bit funny in a sense because I spent so much time trying to figure out which language to juice and trying to look at which language would be least likely to die or become like obsolete in a few years and what's funny about it is I now realize that it would not have mattered which one I picked because they're all so similar that you won't really have any trouble switching to another language in case that your language were to like die out completely and also very few languages if any actually die out completely especially if you look at the big ones and even if you were to be super unlucky and your programming language was to die out and no new programs are written in it they'll still be a ton of old programs that still need maintenance and update that are written in your favorite language so it really doesn't matter which one you pick as long as you're excited about the language and as long as you have like project ideas and things you're excited to work on and in case you're having like decision anxiety about which language to choose I thought I'd just add my recommendation so that you have that at least so I would recommend you learn Java because it's really easy to learn and it's also easy to transfer knowledge from Java to other languages and there's also tons of resources available to learn from don't buy that udemy course you're better off learning it for free okay I have nothing against udemy or any other sites for learning they're probably great but something that I wish I would have known before I bought a udemy course on iOS development is that I would have needed a lot more basic programming knowledge to actually utilize that course fully and the course that I bought was a course that in my opinion was trying to do too much it was trying to take you from like zero programming knowledge to a full-blown iOS app that was like integrating an API and using source control with github and basically they went over the basics way too quickly so I was not able to follow along and that just ended up leaving me feeling like the task of learning this was just too difficult there are probably better courses on udemy and maybe this one was great too and I'm just a bit slow who knows either way I believe that most people are probably going to be better off just learning on their own and just googling their way to the answers of the questions that come up and the second benefit of learning that way is that you're actually practicing being in a programmer because that's mostly what programmers do they run into problems they're unable to solve and then they Google their way to the answers learning it it's not as difficult as you think you get to something that I know scares a lot of people and get scared me to the terminal also scared me and I believe the reason for this is that we're so unfamiliar with this way of like interacting with the computer however that's not strange and it might feel daunting and uncomfortable but it really doesn't take too long until you understand it to the point of actually being able to use it it's just about spending time in this environment so I'd recommend spending some time in here every day so in the terminal for Mac or console for Windows and just learn to navigate learn to create new files and new folders and just get familiar with the environment and then learn get so gift is a source control system that's widely used by software developers and basically what it allows you to do is save your local code to a database which in my case is github.com and that means that if I lose the code that I have on my computer it will be stored on github.com and I can get it back and continue working from the last point where I saved and it does a lot more than this but for now that's not really important take breaks this is something I still struggle with but it's super important and currently I try not to sit and code for more than three hours without a break and that break will be to eat and then maybe either go for a walk or go to the gym so why is this so important well the reason that is so important it's also kind of the reason why it's so difficult to actually do so basically when you take a break you clear your head which means you'll be more able to solve the problems that you'll run into when you're coding and usually when you need to take a break you're stuck on a problem that you feel like you're just about to solve and so you kind of postpone the break for just another 10 minutes and then all the sudden the time just starts running away from you and the problem that you thought you were gonna solve in the next 10 minutes is taking you four hours and you still haven't solved it at least that's the reason why it's so difficult for me to take that break because I constantly feel like I'm just ten minutes away from solving that problem and you can always postpone a break for just 10 minutes right 10 minutes is like nothing and I always feel like if I just solve this problem then I'll be happy and I can go on my break and if I don't solve the problem that I won't be able to relax so the break won't matter anyway but that's the point where you actually need to take the break so in short take more breaks set a timer and when the timer goes off no matter where you are where you're at or how close you are to solving the problem put your hands in the air step away from the vehicle and move away take a break do something else all right I hope I gave you some new ideas on some things that maybe haven't thought of before or maybe I was able to cement some things that you've heard many times before either way I hope you enjoyed it and I hope I'll see you [Music]. [Music]. [Music] you. [Music]